#cloud-config
autoinstall:
  version: 1
  
  # Configurações de localização
  locale: pt_BR.UTF-8
  
  # Configurações de teclado
  keyboard:
    layout: br
    variant: ""
    toggle: null
  
  # Configurações de rede (DHCP automático)
  network:
    version: 2
    ethernets:
      enp0s3:  # Ajuste conforme seu adaptador de rede
        dhcp4: true
  
  # Configurações de mirror/repositório
  apt:
    preserve_sources_list: false
    mirror-selection:
      primary:
        - country-mirror
        - uri: "http://br.archive.ubuntu.com/ubuntu"
          arches: [amd64]
      geoip: true
  
  # Configurações de armazenamento (LVM com criptografia opcional)
  storage:
    layout:
      name: lvm
      # RECOMENDADO: Ative a criptografia LUKS para segurança
      # password: "SENHA_CRIPTOGRAFIA"  # Descomente e defina uma senha forte
  
  # Configurações de identidade
  identity:
    hostname: workstation
    username: WorkStation
    # IMPORTANTE: Substitua esta senha hash pela sua própria
    # Para gerar: mkpasswd -m sha-512 SUA_SENHA
    password: '$6$NiTj4zTPqIZGh/RN$AaopcN.gtH/Zr6Gda5nVLGSkW7NWCBvYbW/x2jugb92paIJBDH2EKPTfxU.enzOV7SfylsYyL/MiQJYPRZjyX.'
    realname: 'Work Station User'
  
  # Configurações SSH
  ssh:
    install-server: true
    authorized-keys: []
    allow-pw: true
  
  # Pacotes a serem instalados
  packages:
    # Desenvolvimento
    - git
    - python3
    - python3-pip
    - python3-venv
    - npm
    - default-jre
    - default-jdk
    - golang-go
    - cargo
    - rustc
    - docker.io
    - docker-compose
    - curl
    - wget
    
    # Ferramentas de sistema
    - build-essential
    - software-properties-common
    - apt-transport-https
    - ca-certificates
    - gnupg
    - lsb-release
    - htop
    - neofetch
    - tmux
    - zsh
    - vim
    - neovim
    
    # Ferramentas de Segurança e Rede
    - nmap
    - netcat
    - tcpdump
    - wireshark
    - aircrack-ng
    - hashcat
    - john
    - hydra
    - net-tools
    - dnsutils
    - whois
    - traceroute
    - iptables
    - ufw
    - fail2ban
    - rkhunter
    - chkrootkit
    - clamav
    - clamav-daemon
    - lynis
    - aide
    
    # Análise e Forensics
    - binutils
    - hexedit
    - binwalk
    - foremost
    - volatility
    - autopsy
    - sleuthkit
    - forensics-all
    
    # Criptografia e Certificados
    - openssl
    - gpg
    - cryptsetup
    - steghide
    - outguess
    - secure-delete
    
    # Desenvolvimento Seguro
    - sqlmap
    - nikto
    - dirb
    - gobuster
    - wfuzz
    - burpsuite
    - zaproxy
    
    # Bibliotecas Python para Segurança
    - python3-scapy
    - python3-requests
    - python3-paramiko
    - python3-cryptography
    - python3-pwntools
    
    # Bibliotecas necessárias para apps
    - libfuse2
    - libgtk-3-0
    - libnotify4
    - libnss3
    - libxss1
    - libxtst6
    - xdg-utils
    - libatspi2.0-0
    - libsecret-1-0
    - libpcap-dev
    - libssl-dev
  
  # Comandos para executar após a instalação
  late-commands:
    # Configurações de Segurança Inicial
    - curtin in-target -- systemctl enable ufw
    - curtin in-target -- ufw --force enable
    - curtin in-target -- ufw default deny incoming
    - curtin in-target -- ufw default allow outgoing
    - curtin in-target -- ufw allow ssh
    - curtin in-target -- systemctl enable fail2ban
    
    # Configurar swappiness para melhor performance
    - curtin in-target -- sh -c 'echo "vm.swappiness=10" >> /etc/sysctl.conf'
    
    # Adicionar repositórios necessários
    - curtin in-target -- add-apt-repository -y ppa:mozillateam/ppa
    
    # Configurar prioridade do Firefox PPA
    - |
      curtin in-target -- bash -c 'echo "Package: firefox*
      Pin: release o=LP-PPA-mozillateam
      Pin-Priority: 501" > /etc/apt/preferences.d/mozilla-firefox'
    
    # Adicionar repositório Kali Linux para ferramentas de segurança
    - curtin in-target -- sh -c 'echo "deb http://http.kali.org/kali kali-rolling main contrib non-free" > /etc/apt/sources.list.d/kali.list'
    - curtin in-target -- wget -qO- https://archive.kali.org/archive-key.asc | curtin in-target -- gpg --dearmor -o /etc/apt/keyrings/kali-archive-keyring.gpg
    
    # Configurar prioridade baixa para pacotes Kali (evitar conflitos)
    - |
      curtin in-target -- bash -c 'echo "Package: *
      Pin: release o=Kali
      Pin-Priority: 50" > /etc/apt/preferences.d/kali-linux'
    
    # Atualizar lista de pacotes
    - curtin in-target -- apt-get update
    
    # Instalar Firefox do PPA
    - curtin in-target -- apt-get install -y firefox
    
    # Instalar VSCode
    - curtin in-target -- wget -qO- https://packages.microsoft.com/keys/microsoft.asc | curtin in-target -- gpg --dearmor -o /etc/apt/keyrings/packages.microsoft.gpg
    - curtin in-target -- sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y code
    
    # Instalar VirtualBox
    - curtin in-target -- wget -qO- https://www.virtualbox.org/download/oracle_vbox_2016.asc | curtin in-target -- gpg --dearmor -o /etc/apt/keyrings/oracle-virtualbox-2016.gpg
    - curtin in-target -- sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/oracle-virtualbox-2016.gpg] https://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" > /etc/apt/sources.list.d/virtualbox.list'
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y virtualbox-7.0
    
    # Instalar LibreOffice
    - curtin in-target -- apt-get install -y libreoffice
    
    # Baixar e instalar Discord
    - curtin in-target -- wget -O /opt/discord.deb "https://discord.com/api/download?platform=linux&format=deb"
    - curtin in-target -- dpkg -i /opt/discord.deb || curtin in-target -- apt-get install -f -y
    - curtin in-target -- rm /opt/discord.deb
    
    # Baixar e instalar Spotify
    - curtin in-target -- sh -c 'curl -sS https://download.spotify.com/debian/pubkey_6224F9941A8AA6D1.gpg | gpg --dearmor -o /etc/apt/keyrings/spotify.gpg'
    - curtin in-target -- sh -c 'echo "deb [signed-by=/etc/apt/keyrings/spotify.gpg] http://repository.spotify.com stable non-free" > /etc/apt/sources.list.d/spotify.list'
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y spotify-client
    
    # Baixar e instalar 1Password
    - curtin in-target -- sh -c 'curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --dearmor -o /etc/apt/keyrings/1password-archive-keyring.gpg'
    - curtin in-target -- sh -c 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" > /etc/apt/sources.list.d/1password.list'
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y 1password
    
    # Baixar e instalar Obsidian
    - curtin in-target -- wget -O /opt/obsidian.deb "https://github.com/obsidianmd/obsidian-releases/releases/download/v1.5.3/obsidian_1.5.3_amd64.deb"
    - curtin in-target -- dpkg -i /opt/obsidian.deb || curtin in-target -- apt-get install -f -y
    - curtin in-target -- rm /opt/obsidian.deb
    
    # Instalar ferramentas de segurança específicas do Kali
    - curtin in-target -- apt-get install -y -t kali-rolling metasploit-framework
    - curtin in-target -- apt-get install -y -t kali-rolling burpsuite
    - curtin in-target -- apt-get install -y -t kali-rolling sqlmap
    - curtin in-target -- apt-get install -y -t kali-rolling enum4linux
    - curtin in-target -- apt-get install -y -t kali-rolling gobuster
    - curtin in-target -- apt-get install -y -t kali-rolling seclists
    - curtin in-target -- apt-get install -y -t kali-rolling wordlists
    
    # Instalar ferramentas Python via pip
    - curtin in-target -- pip3 install --break-system-packages impacket
    - curtin in-target -- pip3 install --break-system-packages pwntools
    - curtin in-target -- pip3 install --break-system-packages ropper
    - curtin in-target -- pip3 install --break-system-packages capstone
    - curtin in-target -- pip3 install --break-system-packages keystone-engine
    - curtin in-target -- pip3 install --break-system-packages unicorn
    - curtin in-target -- pip3 install --break-system-packages requests
    - curtin in-target -- pip3 install --break-system-packages beautifulsoup4
    - curtin in-target -- pip3 install --break-system-packages python-nmap
    - curtin in-target -- pip3 install --break-system-packages paramiko
    - curtin in-target -- pip3 install --break-system-packages cryptography
    - curtin in-target -- pip3 install --break-system-packages jupyter
    - curtin in-target -- pip3 install --break-system-packages pandas
    - curtin in-target -- pip3 install --break-system-packages numpy
    - curtin in-target -- pip3 install --break-system-packages matplotlib
    
    # Instalar Oh My Zsh para o usuário
    - curtin in-target -- su -c "sh -c '$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh) --unattended'" WorkStation
    - curtin in-target -- chsh -s /usr/bin/zsh WorkStation
    
    # Instalar Ghidra (Engenharia Reversa)
    - curtin in-target -- wget -O /opt/ghidra.zip "https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_11.0_build/ghidra_11.0_PUBLIC_20231222.zip"
    - curtin in-target -- unzip /opt/ghidra.zip -d /opt/
    - curtin in-target -- rm /opt/ghidra.zip
    - curtin in-target -- ln -s /opt/ghidra_*/ghidraRun /usr/local/bin/ghidra
    
    # Configurar tema escuro do GNOME
    - curtin in-target -- su -c "gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'" WorkStation
    - curtin in-target -- su -c "gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'" WorkStation
    
    # Configurar atalhos de teclado
    # Alt+C para captura de tela
    - curtin in-target -- su -c "gsettings set org.gnome.shell.keybindings screenshot-window \"['<Alt>c']\"" WorkStation
    
    # Alt+X para terminal
    - curtin in-target -- su -c "gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name 'Terminal'" WorkStation
    - curtin in-target -- su -c "gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command 'gnome-terminal'" WorkStation
    - curtin in-target -- su -c "gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding '<Alt>x'" WorkStation
    - curtin in-target -- su -c "gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings \"['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']\"" WorkStation
    
    # Adicionar usuário aos grupos necessários
    - curtin in-target -- usermod -aG vboxusers,docker,wireshark,dialout WorkStation
    
    # Configurar Git
    - curtin in-target -- su -c "git config --global init.defaultBranch main" WorkStation
    
    # Criar diretórios úteis
    - curtin in-target -- su -c "mkdir -p /home/WorkStation/{Tools,Wordlists,Scripts,Projects,CTF,VPN}" WorkStation
    
    # Configurações de segurança do kernel
    - |
      curtin in-target -- bash -c 'cat >> /etc/sysctl.conf << EOF
      # Segurança de Rede
      net.ipv4.tcp_syncookies = 1
      net.ipv4.conf.all.rp_filter = 1
      net.ipv4.conf.default.rp_filter = 1
      net.ipv4.conf.all.accept_redirects = 0
      net.ipv6.conf.all.accept_redirects = 0
      net.ipv4.conf.all.send_redirects = 0
      net.ipv4.conf.all.accept_source_route = 0
      net.ipv6.conf.all.accept_source_route = 0
      net.ipv4.conf.all.log_martians = 1
      kernel.randomize_va_space = 2
      kernel.exec-shield = 1
      EOF'
    
    # Limpar cache do apt
    - curtin in-target -- apt-get clean
  
  # Configurações de atualização
  updates: all
  
  # Configuração de timezone
  timezone: America/Sao_Paulo
  
  # Configuração de shutdown após instalação
  shutdown: reboot